package com.example.productservice.authenticationservice.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.customerservice.model.Customer;
import com.example.productservice.authenticationservice.model.AuthRequest;
import com.example.productservice.authenticationservice.model.User;
import com.example.productservice.authenticationservice.service.CustomeUserDetailsService;
import com.example.productservice.authenticationservice.utils.JwtUtil;



@RestController
public class LoginController {
	
	
	@Autowired
    private JwtUtil jwtUtil;
    @Autowired
    private AuthenticationManager authenticationManager;
    
   @Autowired
   CustomeUserDetailsService userService;
    
    @GetMapping("/")
	public String login() {
		return "login successful";
	}
    
    @PostMapping(path="/register" )
	public ResponseEntity<User> customerCreated(@RequestBody User user){
		User created=userService.save(user);
		return new ResponseEntity<Customer>(created,HttpStatus.CREATED);
	}

    @PostMapping("/authenticate")
    public String generateToken(@RequestBody AuthRequest authRequest) throws Exception {
        try {
            authenticationManager.authenticate(
                    new UsernamePasswordAuthenticationToken(authRequest.getUserName(), authRequest.getPassword())
            );
        } catch (Exception ex) {
            throw new Exception("inavalid username/password");
        }
        return jwtUtil.generateToken(authRequest.getUserName());
    }

}
